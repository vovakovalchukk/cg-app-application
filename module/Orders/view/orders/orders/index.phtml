<?php $this->inlineScript()->captureStart(); ?>
require([
    "showHideFilters"
],
function(showHideFilters) {
    var orderPage = new showHideFilters();
});
require.config({
    paths: {
        'Filters': "<?= $this->basePath() . Filters\Module::PUBLIC_FOLDER . 'js';?>",
        'Orders': "<?= $this->basePath() . Orders\Module::PUBLIC_FOLDER . 'js';?>"
    }
});
require(["Filters/FilterCollection"], function(filterCollection) {
    var filterNames = {
<?php
    foreach ($filterNames as $index => $filterName) {
        echo $filterName . ": '" . $filterName . "', ";
    }
?>
    };
    filterCollection.setFilters(filterNames);
});
require(["tooltip"], function(Tooltip) {
    var tooltip = new Tooltip("#datatable-container", ".buyer-message-holder, .gift-message-holder");
});
<?php $this->inlineScript()->captureEnd(); ?>
<?php $this->headScript()->appendFile($this->basePath() . CG_UI\Module::PUBLIC_FOLDER . 'js/jqueryPlugin/cg-pjax.js'); ?>
<?php $this->headScript()->appendFile($this->basePath() . Filters\Module::PUBLIC_FOLDER . 'js/dataTableFilters.js'); ?>
<?php $this->placeholder('#main.class')->append('full-width'); ?>
<?php $this->placeholder('#sub-header')->append($filters); ?>
<?php
$this->placeholder('#sidebar')
    ->append($this->statusFiltersSidebar)
    ->append($this->storedFiltersSidebar)
    ->append($this->batches);
?>
<?php $this->headLink()->appendStylesheet($this->basePath() . Orders\Module::PUBLIC_FOLDER . 'css/orders.css', ['screen', 'print']) ?>
<div id="main" class="transition-preload module clearfix<?= $this->placeholder('#main.class')->setPrefix(' ')->setIndent(1) ?>">
<?= $this->breadcrumbs; ?>
<?= $this->bulkItems; ?>
<div id="datatable-container">
    <?= $this->ordersTable; ?>
</div>
