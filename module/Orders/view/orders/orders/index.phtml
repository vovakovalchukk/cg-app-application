<?php $this->inlineScript()->captureStart(); ?>
require([
    "showHideFilters"
],
function(showHideFilters) {
    var orderPage = new showHideFilters();
});
require.config({
    paths: {
        'Filters': "<?= $this->basePath() . Filters\Module::PUBLIC_FOLDER . 'js';?>",
        'Orders': "<?= $this->basePath() . Orders\Module::PUBLIC_FOLDER . 'js';?>"
    }
});
require(["Filters/FilterCollection"], function(filterCollection) {
    var filterNames = {
<?php
    foreach ($filterNames as $index => $filterName) {
        echo $filterName . ": '" . $filterName . "', ";
    }
?>
    };
    filterCollection.setFilters(filterNames);
});
require(["tooltip"], function(Tooltip) {

    //todo - do something useful with this in TAC-448
    const pdfExportOptions = <?= json_encode($pdfExportOptions) ?>;

    var buyerMessageTooltip = new Tooltip(
        "#datatable-container",
        ".buyer-message-holder",
        function() {
            return $(this).attr("title");
        }
    );

    var giftMessageTooltipTemplate = '/cg-built/orders/template/columns/giftMessage/tooltip.mustache';
    CGMustache.get().fetchTemplate(
        giftMessageTooltipTemplate,
        function(template, cgmustache) {
            var giftMessageTooltip = new Tooltip(
                "#datatable-container",
                ".gift-message-holder",
                function() {
                    var giftMessages = $(this).data("gift-messages");
                    if (typeof(giftMessages) !== "object" || !giftMessages.length) {
                        return "";
                    }

                    var counter = 0;
                    var seperator =  function(text, renderer) {
                        if (counter++ > 0) {
                            return renderer(text);
                        }
                        return "";
                    };

                    return cgmustache.renderTemplate(
                        template,
                        {
                            'giftMessages': giftMessages,
                            'seperator': function() { return seperator; }
                        }
                    );
                }
            );
        }
    );

    $('#datatable-container').on('xhr', function(event, oSettings, oldJson) {
        var orderIds = {};
        oldJson.Records.forEach(function(record){
            orderIds[record.id] = record;
        });

        var orderIdsArray = Object.keys(orderIds);
        if (! orderIdsArray.length) {
            return;
        }

        $.ajax({
            "url": '/orders/getDeferredColumnData',
            "type": 'POST',
            "data": {
                orderIds: orderIdsArray
            },
            "dataType": 'json',
            "success": function(response) {
                var newData = response.newData;
                oSettings.aoData.forEach(function (record, rowIndex) {
                    var orderId = record._aData['id'];
                    if (newData[orderId] === undefined) {
                        return;
                    }
                    for (var colIndex in oSettings.aoColumns) {
                        var attrname = oSettings.aoColumns[colIndex].mData;
                        if (newData[orderId][attrname] === undefined) {
                            continue;
                        }
                        oSettings.oInstance.fnUpdate(newData[orderId][attrname], rowIndex, colIndex, false, false);
                    }
                });
            },
            error: function(error) {
                console.warn(error);
            }
        });
    });
});
<?php $this->inlineScript()->captureEnd(); ?>
<?php $this->headScript()->appendFile($this->basePath() . CG_UI\Module::PUBLIC_FOLDER . 'js/jqueryPlugin/cg-pjax.js'); ?>
<?php $this->headScript()->appendFile($this->basePath() . Filters\Module::PUBLIC_FOLDER . 'js/dataTableFilters.js'); ?>
<?php $this->headLink()->appendStylesheet($this->basePath() .'/cg-built/vendor/cg-common/dist/css/default.css', ['screen', 'print']) ?>
<?php $this->placeholder('#main.class')->append('full-width'); ?>
<?php $this->placeholder('#sub-header')->append($filters); ?>
<?php
$this->placeholder('#sidebar')
    ->append($this->statusFiltersSidebar)
    ->append($this->storedFiltersSidebar)
    ->append($this->batches);
?>
<div id="main" class="transition-preload module clearfix<?= $this->placeholder('#main.class')->setPrefix(' ')->setIndent(1) ?>">
<?= $this->breadcrumbs; ?>
<?= $this->bulkItems; ?>
<div id="datatable-container">
    <?= $this->ordersTable; ?>
</div>
<a href="/orders/new">
    <div id="new-order-nav-icon">
        <span title="Create new order" class="sprite-sprite sprite-clipboard-28-white"></span>
    </div>
</a>