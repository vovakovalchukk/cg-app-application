<?php $this->inlineScript()->captureStart(); ?>
$("#datatable").on("fnServerData", function(event, sSource, aoData, fnCallback, oSettings) {
    $("#filters input[name], #filters select[name]").each(function() {
        aoData.push({"name": "filter[" + $(this).attr("name") + "]", "value": $(this).val()});
    });
    aoData.push({"name": "batch", "value": $('#hidden_batch_filter').val()});
});

$("#filters input[name='apply-filters']").on("click", function() {
    $("#datatable").cgDataTable("redraw");
});

$("#filters input[name='clear-filters']").on("click", function() {
    $("#filters input[name][type!='button'], #filters select[name]").val(undefined);
    $("#datatable").cgDataTable("redraw");
});

function batchFilter(batchId) {
    $('#hidden_batch_filter').val(batchId);
    $("#filters input[name='clear-filters']").click();
}

$(document).on('click', '.batch-filter', function(e) {
    e.preventDefault();
    batchFilter($(this).attr('data-batch-id'));
    return false;
});

var templateUrl = '<?= $this->basePath() . Orders\Module::PUBLIC_FOLDER . 'template/row.html' ?>';
var templateRowId = 'order-row';
CGMustache.get().fetchTemplate(templateUrl, function(template, cgmustache)
{
    $("#datatable").on("fnCreatedRow", function (event, nRow, aData, iDisplayIndex, iDisplayIndexFull)
    {
        aData.formatCurrency = cgmustache.formatCurrency(aData);
        aData.formatDateTime = cgmustache.formatDateTime(aData);
        aData.formatAdditionalOrderItems = function()
        {
            return function(variable, render) {
                aData.extraItems = JSON.parse(JSON.stringify(aData.items));
                aData.extraItems.splice(0, 1);
                return render(variable);
            };
        };
        aData.order_url = Mustache.render("<?= urldecode($this->url('Orders/order', ['order' => '{{order}}'])) ?>", {order: aData.id});

        var html = cgmustache.renderTemplate(template, aData, templateRowId);
        $(nRow).html(html);
    });
});

$("#datatable").on("fnRowCallback", function(event, nRow, aData, iDataIndex) {
    $("a.title", nRow).cgPjax();
});
<?php $this->inlineScript()->captureEnd(); ?>
<?php $this->headScript()->appendFile($this->basePath() . CG_UI\Module::PUBLIC_FOLDER . 'js/mustache.js'); ?>
<?php $this->headScript()->appendFile($this->basePath() . CG_UI\Module::PUBLIC_FOLDER . 'js/cg-mustache.js'); ?>
<?php $this->headScript()->appendFile($this->basePath() . CG_UI\Module::PUBLIC_FOLDER . 'js/jquery/cg-pjax.js'); ?>
<?php $this->placeholder('#main.class')->append('full-width'); ?>
<?php $this->placeholder('#sub-header')->append($filters); ?>
<?php $this->placeholder('#sidebar')->append($batches); ?>
<div id="main" class="module clearfix<?= $this->placeholder('#main.class')->setPrefix(' ')->setIndent(1) ?>">
<?= $this->breadcrumbs; ?>
<?= $this->bulkItems; ?>
<?= $this->ordersTable; ?>
</div>
